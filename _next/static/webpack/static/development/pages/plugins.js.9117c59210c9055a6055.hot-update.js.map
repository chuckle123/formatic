{"version":3,"file":"static/webpack/static/development/pages/plugins.js.9117c59210c9055a6055.hot-update.js","sources":["webpack:///./docs/components/Container.js","webpack:///./docs/components/Footer.js","webpack:///./docs/components/Header.js","webpack:///./docs/components/Link.js","webpack:///./docs/components/NavMenu.js","webpack:///./docs/components/Page.js","webpack:///./docs/components/Section.js","webpack:///./docs/components/Sections.js","webpack:///./pages/plugins.js"],"sourcesContent":["/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\nimport { getMediaQueriesForWidths } from '../styles/Media';\n\nconst styles = {\n  container: css({\n    paddingRight: 15,\n    paddingLeft: 15,\n    marginRight: 'auto',\n    marginLeft: 'auto',\n    ...getMediaQueriesForWidths(\n      {},\n      width => ({\n        width: width - 30,\n      }),\n      width => ({\n        width: width - 30,\n      }),\n      width => ({\n        width: width - 30,\n      })\n    ),\n  }),\n};\n\nconst Container = props => <div css={styles.container}>{props.children}</div>;\n\nexport default Container;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\nimport Container from './Container';\nimport Colors from '../styles/Colors';\n\nconst styles = {\n  footer: css({\n    marginTop: 100,\n    borderTop: `1px solid ${Colors.neutral[5]}`,\n    paddingTop: 40,\n    paddingBottom: 40,\n  }),\n  content: css({\n    textAlign: 'center',\n  }),\n};\n\nconst Header = () => (\n  <footer css={styles.footer}>\n    <Container>\n      <p css={styles.content}>\n        Code licensed by{' '}\n        <a href=\"https://github.com/zapier/formatic/blob/master/LICENSE\">\n          Zapier Inc.\n        </a>\n      </p>\n    </Container>\n  </footer>\n);\n\nexport default Header;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\nimport Container from './Container';\nimport Colors from '../styles/Colors';\nimport Typography from '../styles/Typography';\nimport { getMediaQueriesForWidths } from '../styles/Media';\n\nconst styles = {\n  header: css({\n    borderBottom: `1px solid ${Colors.neutral[5]}`,\n    marginBottom: 40,\n    ...getMediaQueriesForWidths(\n      {\n        ...Typography['sub-head'],\n        paddingTop: 20,\n        paddingBottom: 20,\n      },\n      {\n        ...Typography['main-head'],\n        paddingTop: 60,\n        paddingBottom: 60,\n      }\n    ),\n  }),\n  leadHeader: css({}),\n  logo: css({\n    display: 'block',\n    margin: '0 auto 30px',\n    width: 200,\n    height: 200,\n  }),\n  lead: css({\n    textAlign: 'center',\n    ...Typography['main-head'],\n  }),\n  title: css({\n    ...getMediaQueriesForWidths(\n      {\n        ...Typography['main-head'],\n      },\n      {\n        ...Typography['mega-head'],\n      }\n    ),\n  }),\n  subTitle: css({}),\n};\n\nconst Header = props =>\n  !props.title ? (\n    <div css={[styles.header, styles.leadHeader]}>\n      <Container>\n        <img css={styles.logo} src=\"static/images/logo.png\" alt=\"Formatic\" />\n        <p css={styles.lead}>Automatic Forms for React</p>\n      </Container>\n    </div>\n  ) : (\n    <div css={styles.header}>\n      <Container>\n        <h1 css={styles.title}>{props.title}</h1>\n        <p css={styles.subTitle}>{props.subTitle}</p>\n      </Container>\n    </div>\n  );\n\nexport default Header;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport NextLink from 'next/link';\n\nimport Colors from '../styles/Colors';\nimport { prefixHref } from '../utils';\n\nconst styles = {\n  link: css({\n    color: Colors.main[1],\n  }),\n  navLink: css({\n    color: Colors.neutral[2],\n    textDecoration: 'none',\n    '&:focus, &:hover': {\n      textDecoration: 'none',\n      color: Colors.main[1],\n    },\n  }),\n  navLinkIsActive: css({\n    color: Colors.neutral[1],\n  }),\n};\n\nexport const RawLink = props => {\n  const { href, ...linkProps } = props;\n\n  return (\n    <NextLink href={href} as={prefixHref(href)} passHref={true}>\n      <a {...linkProps} />\n    </NextLink>\n  );\n};\n\nconst Link = props => {\n  const { isNav, isActive, href, ...linkProps } = props;\n  const linkCss = css(\n    styles.link,\n    isNav && styles.navLink,\n    isNav && isActive && styles.navLinkIsActive\n  );\n  return (\n    <NextLink href={href} as={prefixHref(href)} passHref={true}>\n      <a css={linkCss} {...linkProps} />\n    </NextLink>\n  );\n};\n\nexport const NavLink = props => <Link isNav={true} {...props} />;\n\nexport default Link;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport { Toggle } from 'react-powerplug';\n\nimport { RawLink, NavLink } from './Link';\nimport Container from './Container';\nimport Icon from './Icon';\nimport Colors from '../styles/Colors';\nimport { getMediaQueriesForWidths } from '../styles/Media';\n\nimport MenuIcon from '../../static/icons/menu.svg';\nimport DeleteIcon from '../../static/icons/delete.svg';\n\nconst styles = {\n  navWrapper: css({\n    borderBottom: `1px solid ${Colors.neutral[4]}`,\n  }),\n  nav: css({\n    display: 'flex',\n    fontSize: 15,\n    fontWeight: 600,\n    color: Colors.neutral[0],\n  }),\n  brand: css({\n    display: 'inline-block',\n    padding: 10,\n    fontSize: 18,\n    paddingLeft: 0,\n    ...getMediaQueriesForWidths(\n      {\n        flex: 1,\n      },\n      {\n        flex: 'initial',\n      }\n    ),\n  }),\n  brandLink: css({\n    color: Colors.brand[1],\n    textDecoration: 'none',\n    '&:focus, &:hover': {\n      textDecoration: 'none',\n      color: Colors.brand[1],\n    },\n  }),\n  items: css({\n    padding: 0,\n    margin: 0,\n    ...getMediaQueriesForWidths(\n      {\n        display: 'none',\n      },\n      {\n        display: 'flex',\n      }\n    ),\n  }),\n  menuItemsActive: css({\n    width: '100%',\n    backgroundColor: 'white',\n    position: 'absolute',\n    borderBottom: `1px solid ${Colors.neutral[4]}`,\n    paddingLeft: 5,\n    ...getMediaQueriesForWidths(\n      {\n        display: 'block',\n      },\n      {\n        display: 'none',\n      }\n    ),\n  }),\n  menuItemsNotActive: css({\n    display: 'none',\n  }),\n  item: css({\n    padding: 10,\n    borderBottom: `solid 3px rgb(0, 0, 0, 0)`,\n    ...getMediaQueriesForWidths(\n      {\n        display: 'block',\n      },\n      {\n        display: 'inline-block',\n      }\n    ),\n  }),\n  itemIsCurrent: css({\n    ...getMediaQueriesForWidths(\n      {},\n      {\n        borderBottom: `solid 3px ${Colors.main[1]}`,\n      }\n    ),\n  }),\n  toggle: css({\n    borderWidth: 0,\n    backgroundColor: 'white',\n    ...getMediaQueriesForWidths(\n      {},\n      {\n        display: 'none',\n      }\n    ),\n  }),\n};\n\nconst NavItem = props => {\n  const title = props.navTitle || props.title;\n  const target = /^https?:/.test(props.url) ? title : undefined;\n  return (\n    <li css={[styles.item, props.isCurrent && styles.itemIsCurrent]}>\n      <NavLink target={target} href={props.url} isActive={props.isCurrent}>\n        {props.navTitle || props.title}\n      </NavLink>\n    </li>\n  );\n};\n\nconst NavMenu = props => (\n  <Toggle>\n    {menuToggle => (\n      <div>\n        <div css={styles.navWrapper}>\n          <Container>\n            <nav css={styles.nav}>\n              <div css={styles.brand}>\n                <RawLink href=\"/\" css={styles.brandLink}>\n                  Formatic\n                </RawLink>\n              </div>\n              <ul css={styles.items}>\n                {Object.keys(props.pages).map(pageKey => (\n                  <NavItem\n                    key={pageKey}\n                    {...props.pages[pageKey]}\n                    isCurrent={props.pageKey === pageKey}\n                  />\n                ))}\n              </ul>\n              <button css={styles.toggle} onClick={menuToggle.toggle}>\n                {menuToggle.on ? (\n                  <Icon svg={DeleteIcon} />\n                ) : (\n                  <Icon svg={MenuIcon} />\n                )}\n              </button>\n            </nav>\n          </Container>\n        </div>\n        <ul\n          css={[\n            styles.items,\n            styles.menuItemsActive,\n            !menuToggle.on && styles.menuItemsNotActive,\n          ]}\n        >\n          {Object.keys(props.pages).map(pageKey => (\n            <NavItem\n              key={pageKey}\n              {...props.pages[pageKey]}\n              isCurrent={props.pageKey === pageKey}\n            />\n          ))}\n        </ul>\n      </div>\n    )}\n  </Toggle>\n);\n\nexport default NavMenu;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport Layout from './Layout';\n\nimport Typography from '../styles/Typography';\n\nimport 'sanitize.css';\nimport 'codemirror/lib/codemirror.css';\nimport '../../static/css/app.css';\nimport '../../static/css/formatic.css';\n\nconst pages = {\n  start: {\n    url: '/start',\n    title: 'Getting Started',\n    subTitle: 'Installing and using Formatic',\n  },\n  demo: {\n    url: '/demo',\n    title: 'Field Types',\n    subTitle: 'The whole kitchen sink',\n  },\n  plugins: {\n    url: '/plugins',\n    navTitle: 'Plugins',\n    title: 'Extending Formatic',\n  },\n  github: {\n    url: 'http://github.com/zapier/formatic',\n    title: 'GitHub',\n  },\n};\n\nconst styles = {\n  body: css({\n    ...Typography['body-large'],\n  }),\n};\n\nconst Page = props => (\n  <Layout pages={pages} pageKey={props.pageKey}>\n    <div css={styles.body}>{props.children}</div>\n  </Layout>\n);\n\nexport default Page;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\nimport Icon from './Icon';\n\nimport { dashify } from '../utils';\nimport Typography from '../styles/Typography';\n\nimport LinkIcon from '../../static/icons/link.svg';\n\nconst styles = {\n  section: css({}),\n  sectionHead: css({\n    ...Typography['main-head'],\n  }),\n  link: css({\n    paddingLeft: 5,\n  }),\n};\n\nconst Section = props => (\n  <div css={styles.section}>\n    <h2 css={styles.sectionHead}>\n      {props.title}\n      <a css={styles.link} href={`#${dashify(props.title)}`}>\n        <Icon svg={LinkIcon} />\n      </a>\n    </h2>\n    <div>{props.children}</div>\n  </div>\n);\n\nexport default Section;\n","/** @jsx jsx */\nimport * as React from 'react';\nimport { jsx, css } from '@emotion/core';\n\nimport { dashify } from '../utils';\nimport { getMediaQueriesForWidths } from '../styles/Media';\n\nconst styles = {\n  wrapper: css({\n    display: 'flex',\n    ...getMediaQueriesForWidths(\n      {\n        flexDirection: 'column-reverse',\n      },\n      {\n        flexDirection: 'row',\n      }\n    ),\n  }),\n  toc: css({\n    ...getMediaQueriesForWidths(\n      {},\n      {\n        top: 0,\n        position: 'sticky',\n        height: '90vh',\n        width: '25%',\n        overflowY: 'scroll',\n      }\n    ),\n  }),\n  content: css({\n    ...getMediaQueriesForWidths(\n      {},\n      {\n        width: '75%',\n      }\n    ),\n  }),\n};\n\nconst Sections = props => (\n  <div css={styles.wrapper}>\n    <div css={styles.content}>\n      {React.Children.map(props.children, child => (\n        <>\n          <a name={dashify(child.props.title)} />\n          {child}\n        </>\n      ))}\n    </div>\n    <div css={styles.toc}>\n      <ul>\n        {React.Children.map(props.children, child => (\n          <li>\n            <a href={`#${dashify(child.props.title)}`}>{child.props.title}</a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n\nexport default Sections;\n","import React from 'react';\nimport 'isomorphic-unfetch';\n\nimport Page from '../docs/components/Page';\nimport Section from '../docs/components/Section';\nimport CodeBlock from '../docs/components/CodeBlock';\nimport Sections from '../docs/components/Sections';\nimport Code from '../docs/components/Code';\n\nimport { loadSnippets } from '../docs/utils';\n\nconst Plugins = props => (\n  <Page pageKey=\"plugins\">\n    <Sections>\n      <Section title=\"Config\">\n        <p>\n          Plugins are simply functions that help to create a configuration\n          object that is passed into Formatic, so first let's talk about the\n          config.\n        </p>\n        <p>\n          Almost all of Formatic's behavior is passed in via the{' '}\n          <Code>config</Code> property. If you pass in no config, then Formatic\n          uses it's own{' '}\n          <a href=\"https://github.com/zapier/formatic/blob/master/src/default-config.js\">\n            default config plugin\n          </a>{' '}\n          to create a config for you. To change Formatic's behavior, you simply\n          pass in a config object with different methods.\n        </p>\n        <p>Passing in no config:</p>\n        <CodeBlock language=\"javascript\">\n          {props.snippets['plugin-no-config']}\n        </CodeBlock>\n        <p>Is equivalent to this:</p>\n        <CodeBlock language=\"javascript\">\n          {props.snippets['plugin-default-config']}\n        </CodeBlock>\n      </Section>\n\n      <Section title=\"A Simple Plugin Example\">\n        <p>\n          Plugins are just functions that help in the creation of a config.\n          Here's a simple plugin that will will use the key instead of the label\n          of a field if the label is not present.\n        </p>\n        <CodeBlock language=\"javascript\">\n          {props.snippets['plugin-fieldLabel']}\n        </CodeBlock>\n        <p>\n          Note that plugin functions receive the config as a parameter, so you\n          can delegate to other methods on the config. Let's \"humanize\" our key\n          by calling the <Code>config.humanize</Code> method on the config.\n        </p>\n        <CodeBlock language=\"javascript\">\n          {props.snippets['plugin-humanize']}\n        </CodeBlock>\n        <p>\n          Also note that at the point in time config is passed in, it's had all\n          previous plugins applied. So you can save any existing methods for\n          wrapping. Here, we'll delegate back to the original{' '}\n          <Code>fieldLabel</Code> method.\n        </p>\n        <CodeBlock language=\"javascript\">\n          {props.snippets['plugin-delegate']}\n        </CodeBlock>\n      </Section>\n\n      <Section title=\"Using Plugins\">\n        <p>\n          To use a plugin, just pass it in to <Code>Formatic.createConfig</Code>\n          .\n        </p>\n        <CodeBlock language=\"javascript\">\n          {props.snippets['plugin-using']}\n        </CodeBlock>\n        <p>\n          You can pass in multiple plugins. If multiple plugins define the same\n          method, the config will get the method from the last plugin. As shown\n          above though, each plugin's method can delegate to an earlier plugin's\n          method.\n        </p>\n        <CodeBlock language=\"javascript\">\n          {props.snippets['plugin-using-multiple']}\n        </CodeBlock>\n      </Section>\n\n      <Section title=\"Adding Field Types\">\n        <p>\n          To add a new field type, you can use the `FieldContainer` component to\n          create the field component, and you point to it with a plugin.\n        </p>\n        <CodeBlock language=\"jsx\">\n          {props.snippets['plugin-field-type']}\n        </CodeBlock>\n      </Section>\n    </Sections>\n  </Page>\n);\n\nconst snippetKeys = [\n  'plugin-no-config',\n  'plugin-default-config',\n  'plugin-fieldLabel',\n  'plugin-humanize',\n  'plugin-delegate',\n  'plugin-using',\n  'plugin-using-multiple',\n  'plugin-field-type',\n];\n\nPlugins.getInitialProps = async () => {\n  return { snippets: loadSnippets(snippetKeys) };\n};\n\nexport default Plugins;\n"],"mappings":"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","sourceRoot":""}